{"version":3,"sources":["../node_modules/nanoid/index.browser.js","pages/Content/TodoList/Header/index.jsx","redux/actions/header.js","pages/Content/TodoList/List/index.jsx","pages/Content/TodoList/Foot/index.jsx","pages/Content/TodoList/index.jsx"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","Header","handleKeyUp","event","keyCode","target","value","trim","alert","todoObj","name","done","props","addTodo","className","onKeyUp","this","type","placeholder","React","Component","connect","state","todos","todo","List","handleUpdate","updateTodo","checked","handleDelete","deleteTodo","map","onChange","onClick","style","display","Foot","handleCheckAll","checkAllTodo","deleteAllDone","clearAllDoneTodo","allTodos","length","doneTodos","reduce","pre","index"],"mappings":"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","file":"static/js/5.a07a0b87.chunk.js","sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nif (process.env.NODE_ENV !== 'production') {\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, size, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * size) / alphabet.length)\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../../../../redux/actions/header';\nimport './index.css';\n\nclass Header extends React.Component {\n\thandleKeyUp = (event) => {\n\t\tconst { keyCode, target } = event;\n\t\t//console.log(keyCode, target);\n\t\tif (keyCode !== 13) return;\n\t\tif (target.value.trim() === '') {\n\t\t\talert('Todo can not be empty');\n\t\t} else {\n\t\t\tconst todoObj = { id: nanoid(), name: target.value, done: false };\n\t\t\tthis.props.addTodo(todoObj);\n\t\t\t//console.log(todoObj);\n\t\t}\n\n\t\ttarget.value = '';\n\t};\n\n\trender() {\n\t\t//console.log(this.props.todos);\n\t\treturn (\n\t\t\t<div className=\"todo_header\">\n\t\t\t\t<h2>Todo List</h2>\n\t\t\t\t<input\n\t\t\t\t\tonKeyUp={this.handleKeyUp}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"newTodo\"\n\t\t\t\t\tplaceholder=\"Please write a new todo and push ENTER\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect((state) => ({ todos: state.todos }), { addTodo })(Header);\n","export const addTodo = (todoObj) => ({ type: 'addTodo', todo: todoObj });\nexport const updateTodo = (id, done) => ({ type: 'updateTodo', id, done });\nexport const deleteTodo = (id) => ({ type: 'deleteTodo', id });\nexport const checkAllTodo = (done) => ({ type: 'checkAllTodo', done });\nexport const clearAllDoneTodo = () => ({ type: 'clearAllDoneTodo' });\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { updateTodo, deleteTodo } from '../../../../redux/actions/header';\nimport './index.css';\n\nclass List extends React.Component {\n\thandleUpdate = (id) => {\n\t\treturn (event) => {\n\t\t\tthis.props.updateTodo(id, event.target.checked);\n\t\t};\n\t};\n\n\thandleDelete = (id) => {\n\t\treturn this.props.deleteTodo(id);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<ul className=\"todo_list\">\n\t\t\t\t{this.props.todos.map((todo) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={todo.id} className=\"todo_item\">\n\t\t\t\t\t\t\t<label className=\"todo_label\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" checked={todo.done} onChange={this.handleUpdate(todo.id)} />\n\t\t\t\t\t\t\t\t<span className=\"todo_name\">{todo.name}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={() => this.handleDelete(todo.id)}\n\t\t\t\t\t\t\t\tclassName=\"todo_btn\"\n\t\t\t\t\t\t\t\tstyle={{ display: 'block' }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\nexport default connect(\n\t(state) => ({\n\t\ttodos: state.todos\n\t}),\n\t{\n\t\tupdateTodo,\n\t\tdeleteTodo\n\t}\n)(List);\n","import React from 'react';\n//import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { clearAllDoneTodo, checkAllTodo } from '../../../../redux/actions/header';\nimport './index.css';\n\nclass Foot extends React.Component {\n\thandleCheckAll = (event) => {\n\t\tthis.props.checkAllTodo(event.target.checked);\n\t};\n\n\tdeleteAllDone = () => {\n\t\tthis.props.clearAllDoneTodo();\n\t};\n\n\trender() {\n\t\tconst { todos } = this.props;\n\t\tlet allTodos = todos.length;\n\t\tlet doneTodos = todos.reduce((pre, todo) => {\n\t\t\tif (todo.done === true) {\n\t\t\t\treturn pre + 1;\n\t\t\t} else {\n\t\t\t\treturn pre + 0;\n\t\t\t}\n\t\t}, 0);\n\n\t\treturn (\n\t\t\t<div className=\"todo_footer\">\n\t\t\t\t<label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tonChange={this.handleCheckAll}\n\t\t\t\t\t\tchecked={doneTodos === allTodos && allTodos !== 0 ? true : false}\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<span>\n\t\t\t\t\t<span className=\"footer_info\">\n\t\t\t\t\t\tDone {doneTodos} / All {allTodos}{' '}\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<button onClick={this.deleteAllDone} className=\"todo_btn\">\n\t\t\t\t\tClear All Done\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(\n\t(state) => ({\n\t\ttodos: state.todos\n\t}),\n\t{\n\t\tclearAllDoneTodo,\n\t\tcheckAllTodo\n\t}\n)(Foot);\n","import React from 'react';\nimport Header from './Header';\nimport List from './List';\nimport Foot from './Foot';\nimport './index.css';\n\nexport default class index extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"todo_page\">\n\t\t\t\t<div className=\"todo_wrap\">\n\t\t\t\t\t<Header />\n\t\t\t\t\t<Foot />\n\t\t\t\t\t<List />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"],"sourceRoot":""}